bool ThesisSolver::readFile(){

	ifstream readFile; //read the content of a file
	string content; // temporary information string

	//start reading
	readFile.open("Preferencies Information.txt");

	if(readFile.fail()){
		readFile.close();
		ofstream fileCreate("Preferencies Information.txt");
		fileCreate <<"Students Information\n"
				<<"Name\t"<<"preferencies\n"
				<<"---------------------\n"
				<<"Projects Information\n"
				<<"Name\t"<<"preferencies\n"
				<<"---------------------\n"
				<<"Supervisors\n"
				<<"Name\t"<<"preferencies\n"
				<<"---------------------\n";
		fileCreate.close();
		readFile.open("Preferencies Information.txt");
	}

	while (!readFile.eof()){
		int phase = 1; //lecture phase: 1-Students, 2-Dissertations, 3-Supervisors

		getline(readFile, content);
		getline(readFile, content);
		getline(readFile, content, '\t');

		while (content!="---------------------") {

			Entity* temp = new Entity();

			for(int i=0; i<3; i++){
				if(i<0) getline(readFile, content, '\t');
				if(i==0)
					temp->setName(content);
				else //case 1:
					temp->addToPreferencesID(atoi(content.c_str()));
			}

			switch (phase){
			case 1:
				students.push_back(temp);
				break;
			case 2:
				dissertations.push_back(temp);
				break;
			default: //case 3:
				supervisors.push_back(temp);
				break;

			}

			getline(readFile, content, '\t');
		}
		phase++;
	}

	return true;
}